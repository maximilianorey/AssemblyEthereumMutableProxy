/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, ContractFactory, Interface, type Signer, type ContractRunner, type ContractTransactionResponse, type ContractDeployTransaction } from "ethers";
import type {
  ProxyManagerEpsilon,
  ProxyManagerEpsilonInterface,
} from "../typechain/contracts/ProxyManagerEpsilon";
import type { NonPayableOverrides } from "../typechain/common";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "NewProxy",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "changeAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "firstAdmin",
        type: "address",
      },
      {
        internalType: "address",
        name: "firstImplementation",
        type: "address",
      },
    ],
    name: "deployProxy",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
    ],
    name: "getAdmin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
    ],
    name: "getImplementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

type ProxyManagerEpsilonConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ProxyManagerEpsilonConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

const _bytecode =
  "0x61056d60008161001182393061044252F3346103825736601357335460005260206000F35B60003560E01C806315ac72ca1461018157806364efb22b1460bd578063132d807e146101a55780631acfd02a1460ca57630a6eafdd036103125761017b806103f260003960243561000152600080F06004358060005281558060243581740100000000000000000000000000000000000000001755600435602435917F4f62830bd0f7f1b8fd4049dbe971718cf9fc61eac34094af474eb17406289a18600080A460005260206000F35B6004355460005260206000F35B6024358060205260043580548061014b5760646000816100e78239FD08c379a00000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000001550726f7879206e6f7420726567697374657265642e00000000000000000000005B33036102a25755336000526004357F4eb572e99196bed0270fbd5b17a948e19c3f50a97838cb0d2a75a823ff8e6c5060406000A2005B60043574010000000000000000000000000000000000000000175460005260206000F35B6004355433036102a257602435600435740100000000000000000000000000000000000000001755602435803B6102665760846000816101e28239FD08c379a00000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000002d455243313936373a206e657720696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374000000000000000000000000000000000000005B600052600080602081806004355AF16024356004357F5d611f318680d00598bb735d61bacf0c514c6b50e1e5ad30040a4df2b12791c7600080A3005B60646000816102ae8239FD08c379a00000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000001f43616c6c6572206973206e6f74207468652061637475616c2061646d696e2e005B606460008161031e8239FD08c379a00000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000001346554e4354494f4e204e4f5420464f554e442e000000000000000000000000005B606460008161038e8239FD08c379a0000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000134e4f54205041594d454e5420414c4c4f574544000000000000000000000000007F00000000000000000000000000000000000000000000000000000000000000007FFFFFFFFFFFFFFFFFFFFFFFFFFFFFDCFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE5561012d600081604e8239F3337F0000000000000000000000000000000000000000000000000000000000000000146096577FFFFFFFFFFFFFFFFFFFFFFFFFFFFFDCFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE54600036818037803681845AF46060573D6000803E3D6000FD5B7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFDCFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE540360bd573D608c57005B3D6000803E3D6000F35B6000357FFFFFFFFFFFFFFFFFFFFFFFFFFFFFDCFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE55005B60646000816100c98239FD08c379a000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000013434f525255505445442052454749535445525300000000000000000000000000";

export class ProxyManagerEpsilon__factory extends ContractFactory{
  constructor(...args: ProxyManagerEpsilonConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ProxyManagerEpsilon & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ProxyManagerEpsilon__factory {
    return super.connect(runner) as ProxyManagerEpsilon__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ProxyManagerEpsilonInterface {
    return new Interface(_abi) as ProxyManagerEpsilonInterface;
  }

  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ProxyManagerEpsilon {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as ProxyManagerEpsilon;
  }
}
