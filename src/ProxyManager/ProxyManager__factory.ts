/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../typechain/common";
import type {
  ProxyManager,
  ProxyManagerInterface,
} from "./ProxyManager";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "changeAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "firstAdmin",
        type: "address",
      },
      {
        internalType: "address",
        name: "firstImplementation",
        type: "address",
      },
    ],
    name: "deployProxy",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
    ],
    name: "getAdmin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6105d560008161001682393061038352306104cd52F3346102295736601357335460005260206000F35B60003560E01C806364efb22b1460855780631acfd02a14609257630a6eafdd036101b95761033c8061029960003960243561000152600080F0600435806000528155807F4eb572e99196bed0270fbd5b17a948e19c3f50a97838cb0d2a75a823ff8e6c5060406000A260005260206000F35B6004355460005260206000F35B602435806020526004358054806101135760646000816100af8239FD08c379a00000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000001550726f7879206e6f7420726567697374657265642e00000000000000000000005B33036101495755336000526004357F4eb572e99196bed0270fbd5b17a948e19c3f50a97838cb0d2a75a823ff8e6c5060406000A2005B60646000816101558239FD08c379a00000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000001f43616c6c6572206973206e6f74207468652061637475616c2061646d696e2e005B60646000816101c58239FD08c379a00000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000001346554e4354494f4e204e4f5420464f554e442e000000000000000000000000005B60646000816102358239FD08c379a0000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000134e4f54205041594d454e5420414c4c4f574544000000000000000000000000007F00000000000000000000000000000000000000000000000000000000000000007FFFFFFFFFFFFFFFFFFFFFFFFFFFFFDCFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE556102ed60008161004f8239F336610079575B7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFDCFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE54600036818037803681845AF4610041573D6000803E3D6000FD5B7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFDCFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE540361027d573D61006f57005B3D6000803E3D6000F35B60003560E01C8063b0ee3ae7146101ac57633659CFE6036005576020600080807F00000000000000000000000000000000000000000000000000000000000000005AFA60005133036005573461020d57600435803B6101625760846000816100de8239FD08c379a00000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000002d455243313936373a206e657720696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374000000000000000000000000000000000000005B807FFFFFFFFFFFFFFFFFFFFFFFFFFFFFDCFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE557Fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080A2005B3461020d576004356101e3577FFFFFFFFFFFFFFFFFFFFFFFFFFFFFDCFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE5460005260206000F35B7F000000000000000000000000000000000000000000000000000000000000000060005260206000F35B60646000816102198239FD08c379a0000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000134e4f54205041594d454e5420414c4c4f574544000000000000000000000000005B60646000816102898239FD08c379a000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000013434f525255505445442052454749535445525300000000000000000000000000";

type ProxyManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ProxyManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ProxyManager__factory extends ContractFactory {
  constructor(...args: ProxyManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ProxyManager & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ProxyManager__factory {
    return super.connect(runner) as ProxyManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ProxyManagerInterface {
    return new Interface(_abi) as ProxyManagerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ProxyManager {
    return new Contract(address, _abi, runner) as unknown as ProxyManager;
  }
}
